% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/forecastOOP.R
\name{smooth_wavelet}
\alias{smooth_wavelet}
\title{Wavelet Denoising}
\usage{
smooth_wavelet(x, thfun = wavShrink, wtfun = NULL, wtfunlist = list(), ...)
}
\arguments{
\item{x}{A numeric vector. If the data is not of length
\eqn{2 ^ J} for some integer \eqn{J}, the function
\code{WiSEBoot::\link[WiSEBoot]{padVector}} increases the length of data to
achieve the particular length requirement based on reflection type.
See the help page of the mentioned function for details. After the
signal computation, the length is again adjusted for the orginal length of \code{x}.}

\item{thfun}{A function to denoise \code{x}. This should be a method
available in packages \code{wmtsa}, \code{EbayesThresh} and \code{wavethresh}.
The options are \code{\link[wmtsa]{wavShrink}},\cr
\code{\link[EbayesThresh]{ebayesthresh.wavelet}} and
\code{\link[wavethresh]{threshold}}. Default: \code{\link[wmtsa]{wavShrink}}.}

\item{wtfun}{A wavelet transform function: \code{\link[waveslim]{dwt}} or
\code{\link[waveslim]{modwt}} if
\code{thfun = \link[EbayesThresh]{ebayesthresh.wavelet}}.
\code{\link[wavethresh]{wd}} if \code{thfun =  \link[wavethresh]{threshold}}.
If \code{thfun = \link[wmtsa]{wavShrink}}, \code{wtfun = NULL} (default).}

\item{wtfunlist}{A named list of parameters to pass to functions \code{\link[waveslim]{dwt}},
\code{\link[waveslim]{modwt}} or \code{\link[wavethresh]{wd}}.}

\item{...}{Additional arguments to pass to functions:
\itemize{
\item{}{\code{wmtsa::\link[wmtsa]{wavShrink}}}
\item{}{\code{EbayesThresh::\link[EbayesThresh]{ebayesthresh.wavelet}}}
\item{}{\code{wavethresh::\link[wavethresh]{threshold}}}
}}
}
\value{
A numeric vector with the wavelet-based signal estimation.
}
\description{
The basic idea behind \code{smooth_wavelet} is to denoise a vector
of data using wavelet methods that are available in 3 \code{R} packages:
\code{wmtsa, EbayesThresh} and \code{wavethresh}. Do not mix parameters
related to different methods.
}
\examples{
inf_head <- coreinf_br[["ipca"]]

# From package wmtsa (default):
smooth_wavelet(inf_head)

# From package EbayesThresh:
smooth_wavelet(inf_head, ebayesthresh.wavelet, modwt, list(wf = "haar"),
               a = NA, vscale = "independent")

# From package wavethresh:
smooth_wavelet(inf_head, threshold, wd, list(filter.number = 8), policy = "cv")


}
\seealso{
\code{\link[wmtsa]{wavShrink}},
\code{\link[EbayesThresh]{ebayesthresh.wavelet}},
\code{\link[wavethresh]{threshold}}
}
